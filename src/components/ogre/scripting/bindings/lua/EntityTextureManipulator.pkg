$#include "components/ogre/widgets/EntityTextureManipulator.h"

namespace Ember
{
namespace OgreView
{
namespace Gui
{

/**
 * @brief Allows for easy manipulation of an EntityCEGUITexture instance being shown by a CEGUI Window.
 */
class EntityTextureManipulator
{
public:
	/**
	 * @brief Emitted when movement of the entity or camera has started.
	 */
	sigc::signal<void> EventMovementStarted;

	/**
	 * @brief Emitted when movement of the entity or camera has stopped.
	 */
	sigc::signal<void> EventMovementStopped;

};

class DirectEntityTextureManipulator : public Ember::OgreView::Gui::EntityTextureManipulator {
public:
	/**
	 * @brief Ctor.
	 * @param window The window which shows the texture.
	 * @param texture The entity texture, which contains both the CEGUI Image and the Ogre SceneManager.
	 */
	DirectEntityTextureManipulator(CEGUI::Window& window, Ember::OgreView::Gui::EntityCEGUITexture& texture);
	virtual ~DirectEntityTextureManipulator();

};

/**
 * @brief Manipulates the camera.
 */
class CameraEntityTextureManipulator: public Ember::OgreView::Gui::EntityTextureManipulator
{
public:
	CameraEntityTextureManipulator(CEGUI::Window& window, Ember::OgreView::Gui::EntityCEGUITexture& texture);
	virtual ~CameraEntityTextureManipulator();

};

/**
 * @brief Manipulates the camera and the entity.
 */
class CombinedEntityTextureManipulator: public Ember::OgreView::Gui::EntityTextureManipulator
{
public:
	/**
	 * @brief Ctor.
	 * @param window The window which shows the texture.
	 * @param texture The entity texture, which contains both the CEGUI Image and the Ogre SceneManager.
	 */
	CombinedEntityTextureManipulator(CEGUI::Window& window, Ember::OgreView::Gui::EntityCEGUITexture& texture);
	virtual ~CombinedEntityTextureManipulator();

	/**
	 * @brief Emitted when editing of the entity has started.
	 */
	sigc::signal<void> EventEditingStarted;

	/**
	 * @brief Emitted when editing of the entity has stopped.
	 */
	sigc::signal<void> EventEditingStopped;

};

}
}
}
#endif /* ENTITYTEXTUREMANIPULATOR_H_ */
